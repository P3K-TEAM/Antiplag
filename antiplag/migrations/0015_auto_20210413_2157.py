# Generated by Django 3.1.3 on 2021-04-13 19:57
import uuid

from django.db import migrations, models
import django.db.models.deletion

from antiplag.enums import MatchType


def populate_total_percentage(apps, schema_editor):
    """
    Fill document's `total_percentage` attribute with results `percentage`
    """
    Result = apps.get_model("antiplag", "result")
    Document = apps.get_model("antiplag", "document")

    for result in Result.objects.all():
        document = Document.objects.get(pk=result.document_id)
        document.total_percentage = result.percentage
        document.save()


def migrate_result_to_new_model(apps, schema_editor):
    Result = apps.get_model("antiplag", "result")
    Backup = apps.get_model("antiplag", "result_backup")

    def parse_matched_doc(doc):
        """
        Parses each matched doc and returns dict of values after migrate
        """
        result = {}
        try:
            # if is valid UUID, it's internal Document id
            result["match_id"] = str(uuid.UUID(doc["id"]))
            result["match_type"] = MatchType.UPLOADED
        except ValueError:
            # else it's elastic id
            result["match_id"] = doc["id"]
            result["match_type"] = "CORPUS"

        result["match_name"] = doc["name"]
        result["ranges"] = doc["intervals"]
        result["percentage"] = doc["percentage"]

        return result

    for result in Result.objects.all():
        matched_docs = result.matched_docs

        for m_doc in matched_docs:
            Backup.objects.create(
                document_id=result.document_id, **parse_matched_doc(m_doc)
            )


class Migration(migrations.Migration):
    dependencies = [
        ("antiplag", "0014_migrate_uuid_foreign_keys"),
    ]

    operations = [
        migrations.AddField(
            model_name="document",
            name="total_percentage",
            field=models.FloatField(null=True),
        ),
        migrations.RunPython(
            populate_total_percentage, reverse_code=migrations.RunPython.noop
        ),
        migrations.CreateModel(
            name="result_backup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        null=False,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="antiplag.document",
                    ),
                ),
                (
                    "match_id",
                    models.CharField(null=False, max_length=255),
                ),
                (
                    "match_name",
                    models.CharField(null=False, max_length=255),
                ),
                (
                    "match_type",
                    models.CharField(
                        null=False,
                        choices=[("CORPUS", "Corpus"), ("UPLOADED", "Uploaded")],
                        max_length=8,
                    ),
                ),
                (
                    "ranges",
                    models.JSONField(null=False),
                ),
                ("percentage", models.FloatField(default=0)),
            ],
        ),
        migrations.RunPython(
            migrate_result_to_new_model, reverse_code=migrations.RunPython.noop
        ),
        migrations.DeleteModel("result"),
        migrations.RenameModel("result_backup", "result"),
    ]
